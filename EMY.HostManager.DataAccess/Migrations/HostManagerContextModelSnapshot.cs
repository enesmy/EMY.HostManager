// <auto-generated />
using System;
using EMY.HostManager.DataAccess.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EMY.HostManager.DataAccess.Migrations
{
    [DbContext(typeof(HostManagerContext))]
    partial class HostManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EMY.HostManager.Entities.DomainInformation", b =>
                {
                    b.Property<int>("DomainInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeleterID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DomainAdress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LastUpdaterID")
                        .HasColumnType("INTEGER");

                    b.HasKey("DomainInformationID");

                    b.ToTable("tblDomainInformations");
                });

            modelBuilder.Entity("EMY.HostManager.Entities.ServerInformation", b =>
                {
                    b.Property<int>("ServerInformationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeleterID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LastUpdaterID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ServerAdress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ServerType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ServerInformationID");

                    b.ToTable("tblServerInformations");
                });

            modelBuilder.Entity("EMY.HostManager.Entities.Template", b =>
                {
                    b.Property<int>("TemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeleterID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LastUpdaterID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TemplateCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("TemplateName")
                        .HasColumnType("TEXT");

                    b.HasKey("TemplateID");

                    b.ToTable("tblTemplates");
                });

            modelBuilder.Entity("EMY.HostManager.Entities.TemplateParameter", b =>
                {
                    b.Property<int>("TemplateParameterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeleterID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LastUpdaterID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParameterName")
                        .HasColumnType("TEXT");

                    b.Property<int>("TemplateID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TemplateParameterID");

                    b.HasIndex("TemplateID");

                    b.ToTable("tblTemplateParameters");
                });

            modelBuilder.Entity("EMY.HostManager.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeleterID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LastUpdaterID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordStored")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("tblUsers");
                });

            modelBuilder.Entity("EMY.HostManager.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorizeType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeleterID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FormName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LastUpdaterID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserRoleID");

                    b.HasIndex("UserID");

                    b.ToTable("tblUserRoles");
                });

            modelBuilder.Entity("EMY.HostManager.Entities.TemplateParameter", b =>
                {
                    b.HasOne("EMY.HostManager.Entities.Template", "Template")
                        .WithMany("Parameters")
                        .HasForeignKey("TemplateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("EMY.HostManager.Entities.UserRole", b =>
                {
                    b.HasOne("EMY.HostManager.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EMY.HostManager.Entities.Template", b =>
                {
                    b.Navigation("Parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
